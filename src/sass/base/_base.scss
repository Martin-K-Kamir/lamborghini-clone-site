
html {
	font-size : 62.5%;
}

body {
	--text           : var(--neutral-6);
	--surface        : var(--neutral-1);

	font-family      : var(--f-serif), Helvetica Neue, Arial;
	font-size        : var(--f-size-1);
	font-weight      : var(--f-weight-2);
	color            : var(--text);
	background-color : var(--surface);

	&[data-menu-open="true"] {
		@include breakpoint(max, screen-lg) {
			overflow-y : hidden;
			width      : calc(100% - var(--scroll-bar-width));
		}
	}
}

section {
	padding-block  : var(--space, var(--space-fluid-7));
	min-block-size : 50rem;
}

a {
	--transition-duration : 300ms;
	--transition-ease     : ease-out;

	text-decoration       : inherit;
	color                 : var(--text);
	transition            : text-decoration 250ms, color var(--transition-duration) var(--transition-ease);

	&:where([data-disabled="true"] &, &[data-disabled="true"]) {
		pointer-events      : none;
		color               : var(--text-disabled, var(--neutral-5));
		-webkit-text-stroke : var(--text-disabled-stroke);
	}

	@media (hover : hover) {
		&:where(:hover, :focus-visible) {
			text-decoration : none;
		}
	}

	&:where(:focus:not([class^="btn-"]), :focus-visible) {
		outline        : var(--outline-size) var(--outline-style) var(--outline-color);
		outline-offset : calc(var(--outline-size) * 2 + 1px);
	}

	&:not([class]) > :where(svg, path) {
		color : inherit;
		fill  : currentColor;
	}
}

button {
	&:focus-visible {
		outline        : var(--outline-size) var(--outline-style) var(--outline-color);
		outline-offset : calc(var(--outline-size) * 2 + 1px);
	}

	& > :where(svg, path) {
		color : inherit;
		fill  : currentColor;
	}
}