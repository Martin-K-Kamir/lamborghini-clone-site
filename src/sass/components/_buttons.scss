
[class*="title-"] + [class^="btn-"] {
	margin-block-start : var(--space, #{clamped(2rem, 3rem, em(330px), em(1365px))});
}

:is(.btn-primary, .btn-secondary) {
	&:where(&, :active, :visited) {
		--text                : var(--neutral-6);
		--surface             : var(--neutral-1);
		--border-color        : var(--neutral-2);
		--border-size         : 1px;
		--transition-duration : 300ms;
		--transition-ease     : ease-in-out;

		display               : inline-grid;
		place-items           : center;
		justify-self          : start;
		line-height           : 1;
		text-decoration       : none;
		text-transform        : uppercase;
		color                 : var(--text);
		background-color      : var(--surface);
		min-inline-size       : var(--btn-size, 13.43em);
		padding               : var(--btn-padding, 1em);
		font-size             : var(--f-size, 1.6rem);
		font-weight           : var(--f-weight, var(--f-weight-2));
		border                : solid var(--border-size) var(--border-color);
		transition            : color var(--transition-duration) var(--transition-ease),
		background-color var(--transition-duration) var(--transition-ease),
		border-color var(--transition-duration) var(--transition-ease);

		@include breakpoint(max, em(600px)) {
			min-inline-size : 100%;
		}

		& + & {
			margin-inline-start : var(--space, 2rem);

			@include breakpoint(max, em(600px)) {
				margin-inline-start : revert;
				margin-block-start  : var(--space, 2rem);
			}
		}
	}

	@media (hover : hover) {
		&:where(:hover, :focus-visible) {
			--hover-text         : var(--surface);
			--hover-surface      : var(--text);
			--hover-border-color : var(--text);

			color                : var(--hover-text);
			background-color     : var(--hover-surface);
			border-color         : var(--hover-border-color);
		}
	}
}

.btn-secondary {
	--text    : var(--neutral-1);
	--surface : var(--neutral-7);
}

.btn-hexagon {
	--surface             : transparent;
	--text                : var(--neutral-1);
	--transition-duration : 200ms;
	--transition-ease     : ease-out;

	display               : inline-flex;
	align-items           : center;
	gap                   : 2rem;

	& + & {
		margin-inline-start : var(--space, 2rem);
	}

	// props
	span:not(.sr-only) {
		font-size       : 1.6rem;
		max-inline-size : var(--measure-1);
	}

	span:not(.sr-only):first-letter {
		text-transform : uppercase;
	}

	svg {
		inline-size  : var(--btn-size, 5rem);
		aspect-ratio : 1 / 1;
	}

	@media (hover : hover) {
		&:where(:hover, :focus-visible) svg {
			--surface : var(--neutral-1);
			--text    : var(--neutral-7);
		}
	}
}

.btn-hamburger {
	--surface             : var(--neutral-1);
	--line-size           : 0.1rem;
	--line-space          : 0.6rem;
	--transition-duration : 250ms;

	inline-size           : var(--btn-size, 2.5rem);
	block-size            : var(--btn-size, 2.5rem);
	transform             : translateY(-3px);

	&__line {
		display          : block;
		inline-size      : 100%;
		block-size       : var(--line-size);
		margin-block     : var(--line-space);
		background-color : var(--surface);
		padding-top      : var(--line-size);
		transition       : transform var(--transition-duration), opacity var(--transition-duration), margin-block var(--transition-duration);

		@include breakpoint(max, em(725px)) {
			transition : none;
		}
	}

	&__line:first-child {
		margin-block-start : 0;
	}

	&__line:last-child {
		margin-block-end : 0;
	}

	&[aria-expanded="true"] > &__line {
		margin : 0;
	}

	&[aria-expanded="true"] > &__line:nth-child(1) {
		transform        : rotate(45deg);
		margin-block-end : calc(-1 * var(--line-size));
	}

	&[aria-expanded="true"] > &__line:nth-child(2) {
		opacity    : 0;
		visibility : hidden;
	}

	&[aria-expanded="true"] > &__line:nth-child(3) {
		transform          : rotate(-45deg);
		margin-block-start : calc(-1 * var(--line-size))
	}
}